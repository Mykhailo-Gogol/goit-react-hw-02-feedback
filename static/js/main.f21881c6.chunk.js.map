{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","props","good","neutral","bad","total","positivePercentage","positiveFeedbacks","toFixed","FeedbackOptions","onLeaveFeedback","onGood","onNeutral","onBad","onClick","className","s","type","Notification","message","localStorage","window","App","state","getLSItem","name","Number","getItem","handleSetToLocalStorage","value","setItem","handleChange","result","setState","this","goodLS","neutralLS","badLS","prevProps","prevState","console","log","options","PureComponent","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCWQC,EAfI,SAACC,GAAW,IACrBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAC7BC,EAAiB,UAAMD,EAAmBE,QAAQ,GAAjC,MAEvB,OACE,gCACE,uCAAUN,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBH,GAAQK,S,OCStBE,EAlBS,SAACR,GAAW,IAAD,EACIA,EAAMS,gBAAnCC,EADyB,EACzBA,OAAQC,EADiB,EACjBA,UAAWC,EADM,EACNA,MAE3B,OACE,gCACE,wBAAQC,QAASH,EAAQI,UAAWC,SAAUC,KAAK,SAAnD,kBAGA,wBAAQH,QAASF,EAAWG,UAAWC,SAAUC,KAAK,SAAtD,qBAGA,wBAAQH,QAASD,EAAOE,UAAWC,SAAUC,KAAK,SAAlD,qBCJSC,EARM,SAACjB,GACpB,OACE,8BACE,4BAAIA,EAAMkB,aCEVC,EAAeC,OAAOD,aAuFbE,E,4MApFbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAyBPoB,UAAY,SAACC,GAAD,OAAUC,OAAON,EAAaO,QAAQF,K,EAElDG,wBAA0B,SAACH,EAAMI,GAC/BT,EAAaU,QAAQL,EAAMI,I,EAG7BE,aAAe,SAACN,GACd,IAAMO,EAAS,EAAKT,MAAME,GAAQ,EAErB,SAATA,GACF,EAAKQ,SAAS,CAAE/B,KAAM8B,IAEX,QAATP,GACF,EAAKQ,SAAS,CAAE7B,IAAK4B,IAEV,YAATP,GACF,EAAKQ,SAAS,CAAE9B,QAAS6B,IAG3B,EAAKJ,wBAAL,UAAgCH,GAAQO,I,uDAzC1C,WAAqB,IAAD,EACaE,KAAKX,MAA5BrB,EADU,EACVA,KAAMC,EADI,EACJA,QAASC,EADL,EACKA,IAEjB+B,EAASD,KAAKV,UAAU,QACxBY,EAAYF,KAAKV,UAAU,WAC3Ba,EAAQH,KAAKV,UAAU,OAEzBW,GAAUA,IAAWjC,GACvBgC,KAAKD,SAAS,CAAE/B,KAAMiC,IAEpBC,GAAaA,IAAcjC,GAC7B+B,KAAKD,SAAS,CAAE9B,QAASiC,IAEvBC,GAASA,IAAUjC,GACrB8B,KAAKD,SAAS,CAAE7B,IAAKiC,M,gCAIzB,SAAmBC,EAAWC,GAC5BC,QAAQC,IAAI,YAAaF,EAAUrC,KAAM,eAAgBgC,KAAKX,MAAMrB,Q,oBAyBtE,WAAU,IAAD,SACwBgC,KAAKX,MAA5BrB,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QACbE,EAAQH,EAAOE,EAAMD,EAE3B,OACE,sBAAKY,UAAU,MAAf,UACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACE4C,QAAS,CAAExC,OAAME,MAAKD,WACtBO,gBAAiB,CACfC,OAAQ,kBAAM,EAAKoB,aAAa,SAChCnB,UAAW,kBAAM,EAAKmB,aAAa,YACnClB,MAAO,kBAAM,EAAKkB,aAAa,aAIrC,cAAC,EAAD,CAASjC,MAAM,aAAf,SACGI,GAAQC,GAAWC,EAClB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAqBJ,EAAOwB,OAAOxB,EAAOE,EAAMD,GAAY,MAG9D,cAAC,EAAD,CAAcgB,QAAQ,+B,GA7EhBwB,iBCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.f21881c6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\n\nconst Statistics = (props) => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  const positiveFeedbacks = `${positivePercentage.toFixed(0)} %`;\n\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {good && positiveFeedbacks}</p>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport * as s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = (props) => {\n  const { onGood, onNeutral, onBad } = props.onLeaveFeedback;\n\n  return (\n    <div>\n      <button onClick={onGood} className={s.button} type=\"button\">\n        good\n      </button>\n      <button onClick={onNeutral} className={s.button} type=\"button\">\n        neutral\n      </button>\n      <button onClick={onBad} className={s.button} type=\"button\">\n        bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Notification = (props) => {\n  return (\n    <div>\n      <p>{props.message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification/\";\n\nconst localStorage = window.localStorage;\n\nclass App extends PureComponent {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  componentDidMount() {\n    const { good, neutral, bad } = this.state;\n\n    const goodLS = this.getLSItem(\"good\");\n    const neutralLS = this.getLSItem(\"neutral\");\n    const badLS = this.getLSItem(\"bad\");\n\n    if (goodLS && goodLS !== good) {\n      this.setState({ good: goodLS });\n    }\n    if (neutralLS && neutralLS !== neutral) {\n      this.setState({ neutral: neutralLS });\n    }\n    if (badLS && badLS !== bad) {\n      this.setState({ bad: badLS });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"GOOD PREV\", prevState.good, \"GOOD CURRENT\", this.state.good);\n  }\n\n  getLSItem = (name) => Number(localStorage.getItem(name));\n\n  handleSetToLocalStorage = (name, value) => {\n    localStorage.setItem(name, value);\n  };\n\n  handleChange = (name) => {\n    const result = this.state[name] + 1;\n\n    if (name === \"good\") {\n      this.setState({ good: result });\n    }\n    if (name === \"bad\") {\n      this.setState({ bad: result });\n    }\n    if (name === \"neutral\") {\n      this.setState({ neutral: result });\n    }\n\n    this.handleSetToLocalStorage(`${name}`, result);\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = good + bad + neutral;\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={{ good, bad, neutral }}\n            onLeaveFeedback={{\n              onGood: () => this.handleChange(\"good\"),\n              onNeutral: () => this.handleChange(\"neutral\"),\n              onBad: () => this.handleChange(\"bad\"),\n            }}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={(good / Number(good + bad + neutral)) * 100}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}